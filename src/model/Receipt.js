/**
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * OpenAPI spec version: 1.6.1
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ReceiptAnchorsNode', 'model/ReceiptHeader', 'model/ReceiptProofNode', 'model/ReceiptSignature', 'model/ReceiptTarget'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ReceiptAnchorsNode'), require('./ReceiptHeader'), require('./ReceiptProofNode'), require('./ReceiptSignature'), require('./ReceiptTarget'));
  } else {
    // Browser globals (root is window)
    if (!root.WoleetApi) {
      root.WoleetApi = {};
    }
    root.WoleetApi.Receipt = factory(root.WoleetApi.ApiClient, root.WoleetApi.ReceiptAnchorsNode, root.WoleetApi.ReceiptHeader, root.WoleetApi.ReceiptProofNode, root.WoleetApi.ReceiptSignature, root.WoleetApi.ReceiptTarget);
  }
}(this, function(ApiClient, ReceiptAnchorsNode, ReceiptHeader, ReceiptProofNode, ReceiptSignature, ReceiptTarget) {
  'use strict';



  /**
   * The Receipt model module.
   * @module model/Receipt
   * @version 1.6.1
   */

  /**
   * Constructs a new <code>Receipt</code>.
   * A Chainpoint 1.x or 2.x proof receipt
   * @alias module:model/Receipt
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Receipt</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Receipt} obj Optional instance to populate.
   * @return {module:model/Receipt} The populated <code>Receipt</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('targetHash')) {
        obj['targetHash'] = ApiClient.convertToType(data['targetHash'], 'String');
      }
      if (data.hasOwnProperty('merkleRoot')) {
        obj['merkleRoot'] = ApiClient.convertToType(data['merkleRoot'], 'String');
      }
      if (data.hasOwnProperty('proof')) {
        obj['proof'] = ApiClient.convertToType(data['proof'], [ReceiptProofNode]);
      }
      if (data.hasOwnProperty('anchors')) {
        obj['anchors'] = ApiClient.convertToType(data['anchors'], [ReceiptAnchorsNode]);
      }
      if (data.hasOwnProperty('signature')) {
        obj['signature'] = ReceiptSignature.constructFromObject(data['signature']);
      }
      if (data.hasOwnProperty('header')) {
        obj['header'] = ReceiptHeader.constructFromObject(data['header']);
      }
      if (data.hasOwnProperty('target')) {
        obj['target'] = ReceiptTarget.constructFromObject(data['target']);
      }
    }
    return obj;
  }

  /**
   * Chainpoint 2.x only. Type of Chainpoint 2.x receipt.
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Chainpoint 2.x only. SHA256 hash of the proven data or signature.
   * @member {String} targetHash
   */
  exports.prototype['targetHash'] = undefined;
  /**
   * Chainpoint 2.x only. Root of the Merkle tree.
   * @member {String} merkleRoot
   */
  exports.prototype['merkleRoot'] = undefined;
  /**
   * Chainpoint 2.x only. Merkle proof: path from `targetHash` to `merkleRoot` in the Merkle tree. 
   * @member {Array.<module:model/ReceiptProofNode>} proof
   */
  exports.prototype['proof'] = undefined;
  /**
   * Chainpoint 2.x only. List of sources where the root of the Merkle proof is anchored.
   * @member {Array.<module:model/ReceiptAnchorsNode>} anchors
   */
  exports.prototype['anchors'] = undefined;
  /**
   * @member {module:model/ReceiptSignature} signature
   */
  exports.prototype['signature'] = undefined;
  /**
   * @member {module:model/ReceiptHeader} header
   */
  exports.prototype['header'] = undefined;
  /**
   * @member {module:model/ReceiptTarget} target
   */
  exports.prototype['target'] = undefined;



  return exports;
}));


