/**
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * The version of the OpenAPI document: 1.13.0
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Identity from './Identity';

/**
 * The SignedIdentity model module.
 * @module model/SignedIdentity
 * @version 1.13.0
 */
class SignedIdentity {
    /**
     * Constructs a new <code>SignedIdentity</code>.
     * Signed identity as included in the signed data, provided as a set of X.500 attributes (see https://www.ietf.org/rfc/rfc4519.txt).
     * @alias module:model/SignedIdentity
     * @implements module:model/Identity
     * @param commonName {String} commonName (CN) (2.5.4.3)
     */
    constructor(commonName) { 
        Identity.initialize(this, commonName);
        SignedIdentity.initialize(this, commonName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, commonName) { 
        obj['commonName'] = commonName;
    }

    /**
     * Constructs a <code>SignedIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignedIdentity} obj Optional instance to populate.
     * @return {module:model/SignedIdentity} The populated <code>SignedIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignedIdentity();
            Identity.constructFromObject(data, obj);

            if (data.hasOwnProperty('commonName')) {
                obj['commonName'] = ApiClient.convertToType(data['commonName'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], 'String');
            }
            if (data.hasOwnProperty('organizationalUnit')) {
                obj['organizationalUnit'] = ApiClient.convertToType(data['organizationalUnit'], 'String');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
        }
        return obj;
    }


}

/**
 * commonName (CN) (2.5.4.3)
 * @member {String} commonName
 */
SignedIdentity.prototype['commonName'] = undefined;

/**
 * organizationName (O) (2.5.4.10)
 * @member {String} organization
 */
SignedIdentity.prototype['organization'] = undefined;

/**
 * organizationalUnitName (OU) (2.5.4.11)
 * @member {String} organizationalUnit
 */
SignedIdentity.prototype['organizationalUnit'] = undefined;

/**
 * localityName (L) (2.5.4.7)
 * @member {String} locality
 */
SignedIdentity.prototype['locality'] = undefined;

/**
 * countryName (C) (2.5.4.6)
 * @member {String} country
 */
SignedIdentity.prototype['country'] = undefined;


// Implement Identity interface:
/**
 * commonName (CN) (2.5.4.3)
 * @member {String} commonName
 */
Identity.prototype['commonName'] = undefined;
/**
 * organizationName (O) (2.5.4.10)
 * @member {String} organization
 */
Identity.prototype['organization'] = undefined;
/**
 * organizationalUnitName (OU) (2.5.4.11)
 * @member {String} organizationalUnit
 */
Identity.prototype['organizationalUnit'] = undefined;
/**
 * localityName (L) (2.5.4.7)
 * @member {String} locality
 */
Identity.prototype['locality'] = undefined;
/**
 * countryName (C) (2.5.4.6)
 * @member {String} country
 */
Identity.prototype['country'] = undefined;




export default SignedIdentity;

