/**
 * Woleet API
 * Welcome to **Woleet API reference documentation**.<br> It is highly recommanded to read the chapters **[introducing Woleet API concepts](https://doc.woleet.io/reference)** before reading this documentation. 
 *
 * OpenAPI spec version: 1.6.0
 * Contact: contact@woleet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WoleetApi) {
      root.WoleetApi = {};
    }
    root.WoleetApi.AuthorizedSignee = factory(root.WoleetApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The AuthorizedSignee model module.
   * @module model/AuthorizedSignee
   * @version 1.6.0
   */

  /**
   * Constructs a new <code>AuthorizedSignee</code>.
   * @alias module:model/AuthorizedSignee
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>AuthorizedSignee</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuthorizedSignee} obj Optional instance to populate.
   * @return {module:model/AuthorizedSignee} The populated <code>AuthorizedSignee</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('pubKey')) {
        obj['pubKey'] = ApiClient.convertToType(data['pubKey'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('countryCallingCode')) {
        obj['countryCallingCode'] = ApiClient.convertToType(data['countryCallingCode'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('requiresOTP')) {
        obj['requiresOTP'] = ApiClient.convertToType(data['requiresOTP'], 'Boolean');
      }
      if (data.hasOwnProperty('commonName')) {
        obj['commonName'] = ApiClient.convertToType(data['commonName'], 'String');
      }
    }
    return obj;
  }

  /**
   * The public key of the authorized signee.<br> **Currently only Bitcoin addresses are supported.**<br> 
   * @member {String} pubKey
   */
  exports.prototype['pubKey'] = undefined;
  /**
   * The email of the authorized signee.<br> If set, `commonName` must also be set. 
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * The country calling code the phone of the authorized signee. 
   * @member {String} countryCallingCode
   */
  exports.prototype['countryCallingCode'] = undefined;
  /**
   * The phone of the authorized signee (not including the country calling code).<br> This phone must be able to receive a One Time Password by SMS. 
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * `true` if the signee must provide a One Time Password to sign.<br> If `true`, `phone` must be set, since the One Time Password is sent by SMS. 
   * @member {Boolean} requiresOTP
   */
  exports.prototype['requiresOTP'] = undefined;
  /**
   * The full name of the authorized signee. 
   * @member {String} commonName
   */
  exports.prototype['commonName'] = undefined;



  return exports;
}));


